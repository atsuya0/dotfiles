[[plugins]] # color scheme
repo = 'tyrannicaltoucan/vim-quantum'
on_event = ['BufRead', 'BufNewFile', 'BufWinEnter']
hook_source = 'colorscheme quantum'

# [[plugins]] # color scheme
# repo = 'rakr/vim-one'
# hook_add = '''
#   let g:airline_theme='deus'
# '''

[[plugins]] # visually displaying indent levels
repo = 'Yggdroot/indentLine'
on_event = ['BufRead', 'BufNewFile', 'BufWinEnter']
hook_add = '''
  let g:indentLine_char = "Â¦"
'''
hook_source = '''
  autocmd Filetype json let g:indentLine_conceallevel = 0
'''

[[plugins]] # unite all interfaces
repo = 'Shougo/denite.nvim'
on_event = ['BufRead', 'BufNewFile', 'BufWinEnter']
if = 'has("nvim")'
hook_add = '''
  nmap <LocalLeader>d [denite]
  nnoremap <silent> [denite]f :Denite -auto_preview file_rec<CR>
  nnoremap <silent> [denite]b :Denite -auto_preview buffer<CR>
  nnoremap <silent> [denite]l :Denite -auto_preview line<CR>
  nnoremap <silent> [denite]r :Denite register<CR>
  nnoremap <silent> [denite]: :Denite command<CR>
  nnoremap <silent> [denite]h :Denite command_history<CR>
  nnoremap <silent> [denite]c :Denite -auto_preview change<CR>
  " nnoremap <silent> [denite]j :Denite -auto_preview jump<CR>
  nnoremap <silent> [denite]g :Denite -auto_preview grep<CR>
  nnoremap <silent> [denite]G :DeniteCursorWord -auto_preview grep<CR>
  nnoremap <silent> [denite]H :Denite help<CR>
  nnoremap <silent> [denite]. :Denite -resume<CR>
  nnoremap <silent> [denite]; :Denite -resume -immediately -select=+1<CR>
  nnoremap <silent> [denite], :Denite -resume -immediately -select=-1<CR>
'''
hook_source = '''
  call denite#custom#option('default', {
      \ 'prompt': '>>>'
  \ })

  if executable('rg')
    call denite#custom#var(
      \ 'file_rec', 'command', ['rg', '--files'])
    call denite#custom#var(
      \ 'grep', 'command', ['rg'])
    call denite#custom#var('grep', 'recursive_opts', [])
  endif
  call denite#custom#var(
    \ 'grep', 'default_opts', ['-nH'])

  call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',
    \ ['.git/', 'vendor/', 'node_modules/', 'images/', 'img/', 'db/data/'])
  call denite#custom#source(
    \ 'file_rec', 'matchers', ['matcher_fuzzy', 'matcher_ignore_globs'])
  call denite#custom#source(
    \ 'grep', 'matchers', ['matcher_fuzzy', 'matcher_ignore_globs'])

  call denite#custom#map(
    \ 'insert', '<C-j>', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map(
    \'insert', '<C-k>', '<denite:move_to_previous_line>', 'noremap')
  call denite#custom#map(
    \ 'normal', '<C-v>', '<denite:do_action:vsplit>', 'noremap')
  call denite#custom#map(
    \ 'insert', '<C-v>', '<denite:do_action:vsplit>', 'noremap')
'''

[[plugins]] # completion for python
repo = 'zchee/deoplete-jedi'
if = 'has("nvim")'
on_ft = 'python'
on_i = 1
hook_source = '''
  let g:deoplete#sources#jedi#python_path = g:python3_host_prog
'''

[[plugins]] # completion for go
repo = 'zchee/deoplete-go'
if = 'has("nvim")'
on_ft = 'go'
on_i = 1

[[plugins]] # various features for go
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
  nnoremap <silent> [denite]d :Denite -auto_preview decls<CR>
  nnoremap <silent> [denite]D :DeniteCursorWord -auto_preview decls<CR>
'''

[[plugins]] # syntax highlighting and formatting for rust
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_source = '''
  let g:syntastic_rust_checkers = ['cargo']
  let g:rustfmt_command = "~/.cargo/bin/rustfmt"
  let g:rustfmt_autosave = 1
'''

[[plugins]] # completion for rust
repo = 'racer-rust/vim-racer'
on_ft = 'rust'
hook_source = '''
  let g:racer_cmd = "~/.cargo/bin/racer"
  let g:racer_experimental_completer = 1
'''
