# set : set-option , setw : set-window-option
# bind : bind-key -T prefix , bind -n : bind-key -T root

# set -g prefix C-q
set -g prefix C-g
unbind-key C-b
# Reload config file
bind-key -T prefix r source-file ${DOTFILES}/tmux/tmux.conf \; display-message 'Reload'
# Use true color
set -g default-terminal 'screen-256color'
set -ga terminal-overrides ',xterm-256color:Tc'

set -g escape-time 1
# Index starts at 1
set -g base-index 1
setw -g pane-base-index 1

setw -g mouse on

set -g status-interval 1
# When a window is closed, automatically renumber the other windows.
set -g renumber-windows on
# Allow multiple commands to be entered without pressing the prefix-key again in the specified time milliseconds.
# bind-key -r
set -g repeat-time 400
# display-message
set -g display-time 1500

# ----------------------------------------
# Key bindings
# ----------------------------------------
bind -n M-: command-prompt -p '>>>'
# select-pane
bind -n -r M-h select-pane -L
bind -n -r M-j select-pane -D
bind -n -r M-k select-pane -U
bind -n -r M-l select-pane -R
# window
bind -n M-n new-window -c '#{pane_current_path}'
bind -n -r M-u select-window -t :-
bind -n -r M-i select-window -t :+
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
# session
bind n command-prompt -p 'new-session :' 'new-session -s %%'
# switch-client
bind c new-window -n 'switch' \
  'tmux list-session -F "#{session_id}:#{session_name}" \
  | cut -c2- \
  | grep -v "${TMUX##*,}:" \
  | cut -d: -f2 \
  | fzf --reverse --exit-0 --select-1 \
      --preview="test -f ${DOTFILES}/tmux/preview.sh \
        && ${DOTFILES}/tmux/preview.sh {}" \
      --preview-window="right:80%" \
  | xargs -I@ tmux switch-client -t @'
# switch-client(with windows collapsed)
bind w choose-tree -w
# kill-session
bind x display-message 'kill-session' \; run-shell \
  'tmux choose-tree -s -f "##{!=:##{session_name},#{session_name}}" \
    "kill-session -t %%"'
# resize-pane
bind -r < resize-pane -L 5
bind -r > resize-pane -R 5
bind -r - resize-pane -D 5
bind -r + resize-pane -U 5
# split-window
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
# trun right
bind -r N swap-pane -D
# trun left
bind -r P swap-pane -U
# kill-window (:killw)
bind X confirm-before -p 'kill-window #I? (y/n)' kill-window
# join-pane
bind j command-prompt -1 'join-pane -ht :%%'

# ----------------------------------------
# Aliases
# ----------------------------------------
set -s command-alias[0] ks='kill-server'
set -s command-alias[1] ka='kill-session -a'

# ----------------------------------------
# Status
# ----------------------------------------
set -g status on
set -g status-keys vi
# Set the position of the window list component of the status line.(left, centre, right)
set -g status-justify centre
setw -g window-status-format ' #I.#W '
setw -g window-status-current-format ' #I.#W '

# maximum length
set -g status-left-length 40
set -g status-right-length 80

# Change display items according to display width.
# set -g status-right "#{?#{==:1,#([[ $(echo #{client_width}) -ge 120 ]] && echo 1 || echo 0)},#(${DOTFILES}/tmux/tmux_right_status.sh),#(${DOTFILES}/tmux/tmux_right_status.sh short)}"
set -g status-right '#(echo #{pane_current_path} | sed s@$HOME@~@)'

# ----------------------------------------
# Color
# ----------------------------------------
set -g status-style fg=default,bg=default
set -g message-command-style fg=default,bg=default
set -g message-style fg=green,reverse,bg=default
set -g mode-style fg=black,bg=blue
set -g pane-active-border-style fg=green,bg=default
set -g pane-border-style fg=default,bg=default
setw -g window-status-current-style fg='#8fa1b3',bold,bg=default
setw -g window-status-style fg='#3f4751',bold,bg=default
setw -g window-active-style fg='#c0c5ce',bg='#2b303b'
setw -g window-style fg='#c0c5ce',bg='#27292d'

# ----------------------------------------
# Copy Mode
# ----------------------------------------
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
# Link tmux buffer with X clipboard.
if-shell 'type xsel' \
  "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel -ib'"
if-shell 'type xsel' \
  "bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'xsel -ib'"
if-shell 'type xsel' \
  "bind ] run-shell 'xsel -ob | xargs -0 tmux set-buffer && tmux paste-buffer'"
if-shell 'type xsel' \
  "bind C-] run-shell \
    'xsel -ob | sed \"s/^[[:space:]]*//;s/[[:space:]]*$//;$!s/.$//\" \
    | tr -d "\n" | xargs -0 tmux set-buffer && tmux paste-buffer'"
