# set : set-option , setw : set-window-option
# bind : bind-key -T prefix , bind -n : bind-key -T root

set -g prefix C-q
unbind-key C-b
# Reload config file
bind-key -T prefix r source-file ${DOTFILES}/tmux/tmux.conf \; display "再読み込み"
# Use true color
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set -g escape-time 1
# Index starts at 1
set -g base-index 1
setw -g pane-base-index 1
setw -g mouse on
set -g status-interval 1
# When a window is closed, automatically renumber the other windows.
set -g renumber-windows on
# Allow multiple commands to be entered without pressing the prefix-key again in the specified time milliseconds.
# bind-key -r
set -g repeat-time 400

# Key bindings------------------------------------
# select-pane
bind -n -r M-h select-pane -L
bind -n -r M-j select-pane -D
bind -n -r M-k select-pane -U
bind -n -r M-l select-pane -R
# window
bind -n -r M-u select-window -t :-
bind -n -r M-i select-window -t :+
bind -n M-c new-window -c "#{pane_current_path}"
# session
bind c new-session
bind k switch-client -p
bind j switch-client -n
bind -n M-s choose-session
bind -n M-w choose-tree -w
# resize-pane
bind -r < resize-pane -L 5
bind -r > resize-pane -R 5
bind -r - resize-pane -D 5
bind -r + resize-pane -U 5
# split-window
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
# trun right
bind -r N swap-pane -D
# trun left
bind -r P swap-pane -U
# kill-window ($ tmux killw)
bind X confirm-before -p "kill-window #I? (y/n)" kill-window
# join-pane
bind ! join-pane -t :1
bind '"' join-pane -t :2
bind '#' join-pane -t :3
bind '$' join-pane -t :4
bind % join-pane -t :5
bind & join-pane -t :6
bind "'" join-pane -t :7
bind ( join-pane -t :8
bind ) join-pane -t :9

# status------------------------------
set -g status on
set -g status-keys vi
# Set the position of the window list component of the status line.(left, centre, right)
set -g status-justify centre
setw -g window-status-format "#W.#I"
setw -g window-status-current-format "#W.#I"

# maximum length
set -g status-left-length 40
set -g status-right-length 80

# Change display items according to display width.
# set -g status-right "#{?#{==:1,#([[ $(echo #{client_width}) -ge 120 ]] && echo 1 || echo 0)},#(${DOTFILES}/tmux/tmux_right_status.sh),#(${DOTFILES}/tmux/tmux_right_status.sh short)}"
set -g status-right "#(xsel -ob | head -1 | cut -c 1-20)"
# color----------------------------------------
set -g status-style fg=default,bg=default
set -g message-command-style fg=default,bg=default
set -g message-style fg=blue,reverse,bg=default
set -g mode-style fg=black,bg=blue
set -g pane-active-border-style fg=green,bg=default
set -g pane-border-style fg=default,bg=default
setw -g window-status-current-style fg=colour25,bold,bg=default
setw -g window-status-style fg=default,bg=default
setw -g window-active-style fg='#c0c5ce',bg='#2b303b'
setw -g window-style fg='#c0c5ce',bg='#27292d'

# copy mode--------------------------------
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
# Link tmux buffer with X clipboard.
%if #{!=:3,#(which xsel | awk '{print NF}')}
    bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel -ib'
    bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'xsel -ib'
    bind ] run-shell \
      "xsel -ob \
        | xargs -0 tmux set-buffer \
        && tmux paste-buffer"
    bind C-] run-shell \
      "xsel -ob \
        | sed 's/^[[:space:]]*//;s/[[:space:]]*$//;$!s/.$//' \
        | tr -d '\n' \
        | xargs -0 tmux set-buffer \
        && tmux paste-buffer"
%endif
